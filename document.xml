<?xml version='1.0' encoding='UTF-8' standalone='yes'?>
<w:document xmlns:wpc="http://schemas.microsoft.com/office/word/2010/wordprocessingCanvas" xmlns:mo="http://schemas.microsoft.com/office/mac/office/2008/main" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:mv="urn:schemas-microsoft-com:mac:vml" xmlns:o="urn:schemas-microsoft-com:office:office" xmlns:r="http://schemas.openxmlformats.org/officeDocument/2006/relationships" xmlns:m="http://schemas.openxmlformats.org/officeDocument/2006/math" xmlns:v="urn:schemas-microsoft-com:vml" xmlns:wp14="http://schemas.microsoft.com/office/word/2010/wordprocessingDrawing" xmlns:wp="http://schemas.openxmlformats.org/drawingml/2006/wordprocessingDrawing" xmlns:w10="urn:schemas-microsoft-com:office:word" xmlns:w="http://schemas.openxmlformats.org/wordprocessingml/2006/main" xmlns:w14="http://schemas.microsoft.com/office/word/2010/wordml" xmlns:wpg="http://schemas.microsoft.com/office/word/2010/wordprocessingGroup" xmlns:wpi="http://schemas.microsoft.com/office/word/2010/wordprocessingInk" xmlns:wne="http://schemas.microsoft.com/office/word/2006/wordml" xmlns:wps="http://schemas.microsoft.com/office/word/2010/wordprocessingShape" mc:Ignorable="w14 wp14"><w:body><w:p><w:pPr><w:pStyle w:val="Title"/></w:pPr><w:r><w:t>🧠 EchoMind – Full System Blueprint + Step-by-Step Build PRD</w:t></w:r></w:p><w:p><w:r><w:t>Author: Joshua (Jojo?67979)</w:t></w:r></w:p><w:p><w:r><w:t>Version: v1.4</w:t></w:r></w:p><w:p><w:r><w:t>Date: 2025-04-24</w:t></w:r></w:p><w:p><w:r><w:t>This is a fully expanded, exhaustive version of the EchoMind Product Requirements Document. It is written to be understood by beginner developers, performers, AI, and app testers. No detail has been omitted. This document will guide a complete novice or advanced AI through the creation, testing, and understanding of every system, trick, admin command, UI element, and hidden feature within the EchoMind application.</w:t></w:r></w:p><w:p><w:pPr><w:pStyle w:val="Heading1"/></w:pPr><w:r><w:t>🔮 What is EchoMind?</w:t></w:r></w:p><w:p><w:r><w:t>EchoMind is a digital magic and mentalism application that turns a mobile device into a customizable, interactive, performance-ready toolkit for magicians and mind readers. It uses voice recognition, fractal animations, audio themes, swipes, gestures, puzzles, and hidden admin systems to create a magical experience. The application supports dozens of tricks, real-time animation logic, badge reward systems, audio-visual synchronization, secret input bars, and diagnostic tools—all tied together by an AI assistant named Gizmo.</w:t></w:r></w:p><w:p><w:pPr><w:pStyle w:val="Heading1"/></w:pPr><w:r><w:t>🎯 Goals of the EchoMind App</w:t></w:r></w:p><w:p><w:r><w:t>• Create a modular magic toolkit that works offline and on all platforms (Android, iOS, Web).</w:t></w:r></w:p><w:p><w:r><w:t>• Enable magicians to perform voice-based or tap-based magic tricks.</w:t></w:r></w:p><w:p><w:r><w:t>• Allow each trick to be configured or hidden by an admin system.</w:t></w:r></w:p><w:p><w:r><w:t>• Support ambient sound/music that evolves based on the user’s actions.</w:t></w:r></w:p><w:p><w:r><w:t>• Include hidden Easter eggs that can be unlocked via puzzles or gestures.</w:t></w:r></w:p><w:p><w:r><w:t>• Enable real-time diagnostics and backup via AI-admin panel.</w:t></w:r></w:p><w:p><w:r><w:t>• Make the app understandable for a child, and expandable by an AI.</w:t></w:r></w:p><w:p><w:pPr><w:pStyle w:val="Heading1"/></w:pPr><w:r><w:t>📁 Folder &amp; File Structure (ZIP)</w:t></w:r></w:p><w:p><w:r><w:t>The EchoMind app will be stored in a compressed ZIP folder that contains every required file. Here’s what goes in the ZIP:</w:t></w:r></w:p><w:p><w:r><w:t>• index.html — Main entry page. Loads orb menu and fractals.</w:t></w:r></w:p><w:p><w:r><w:t>• settings.html — Contains toggle switches to enable/disable features. Accessible via orb.</w:t></w:r></w:p><w:p><w:r><w:t>• gizmo.js — The core AI file. Gizmo controls logic, messages, debug tools.</w:t></w:r></w:p><w:p><w:r><w:t>• admin/console.html — Hidden admin panel. Appears only with correct input.</w:t></w:r></w:p><w:p><w:r><w:t>• tricks/*.html — Each trick has its own page: ThinkAgain, Appetite, TheCall.</w:t></w:r></w:p><w:p><w:r><w:t>• assets/fractals/ — Contains background visuals and scripts to create the animated fractal effects.</w:t></w:r></w:p><w:p><w:r><w:t>• assets/audio/ — Audio files for each trick. Background music and sound effects.</w:t></w:r></w:p><w:p><w:r><w:t>• scripts/ — Routing logic, touch gestures, swipe detection, speech recognition scripts.</w:t></w:r></w:p><w:p><w:r><w:t>• badges.json — List of all unlockable badges and their criteria.</w:t></w:r></w:p><w:p><w:r><w:t>• admin.json — Encrypted JSON that controls admin access, Easter eggs, puzzle logic.</w:t></w:r></w:p><w:p><w:r><w:t>• backup.txt — Plaintext output of last saved system state, updated by 'backup' command.</w:t></w:r></w:p><w:p><w:r><w:br/><w:br/><w:t>... [PHASE 1 to 7 with novice instructions coming next in full detail] ...</w:t></w:r></w:p><w:p><w:pPr><w:pStyle w:val="Heading1"/></w:pPr><w:r><w:t>🔨 Phase 1 – Orb Menu and Navigation</w:t></w:r></w:p><w:p><w:r><w:t>This phase sets up the visual look of the app. Imagine a bunch of glowing bubbles floating in space. These are your 'orbs'. Each orb is a button. When you tap one, it takes you to a trick or a different part of the app. The background is a moving fractal pattern (like a lava lamp but more magical).</w:t><w:br/><w:br/><w:t>To build this:</w:t><w:br/><w:t>1. Create an HTML file called index.html</w:t><w:br/><w:t>2. Use JavaScript to place orbs (circular divs) in random positions on screen.</w:t><w:br/><w:t>3. When an orb is tapped or clicked, JavaScript opens a new section.</w:t><w:br/><w:t>4. Save orb positions using localStorage so they stay in place.</w:t><w:br/><w:t>5. Include one special orb labeled “Don’t Click” — when tapped, it should reveal a hidden input bar for codes.</w:t><w:br/><w:t>6. The background fractal is made using WebGL or a canvas with recursive drawing.</w:t><w:br/><w:t>7. The animation should run forever and change when the user taps the background.</w:t></w:r></w:p><w:p><w:pPr><w:pStyle w:val="Heading1"/></w:pPr><w:r><w:t>🎵 Phase 2 – Music &amp; Fractal Sync</w:t></w:r></w:p><w:p><w:r><w:t>This step makes the background feel alive. The moving colors and shapes (fractals) pulse to music that is playing.</w:t><w:br/><w:br/><w:t>To build this:</w:t><w:br/><w:t>1. Choose a soft background loop in 432Hz — this is a peaceful sound used for magic.</w:t><w:br/><w:t>2. Use the Web Audio API to play the loop when the app starts.</w:t><w:br/><w:t>3. Connect the volume/amplitude of the music to the brightness or speed of the fractal animation.</w:t><w:br/><w:t>4. Let users turn this off or choose a different soundtrack in the settings menu.</w:t></w:r></w:p><w:p><w:pPr><w:pStyle w:val="Heading1"/></w:pPr><w:r><w:t>🧠 Phase 3 – Gizmo AI Setup</w:t></w:r></w:p><w:p><w:r><w:t>Gizmo is the magical assistant inside the app. It can give clues, debug the app, or just say weird things for fun. It only speaks when triggered — never at random.</w:t><w:br/><w:br/><w:t>To build this:</w:t><w:br/><w:t>1. Create a JavaScript file called gizmo.js</w:t><w:br/><w:t>2. Add a floating orb icon that shows up on every page.</w:t><w:br/><w:t>3. Load a list of fun phrases like “You were always going to say that.”</w:t><w:br/><w:t>4. Use SpeechSynthesis to speak these lines out loud with a whispery voice.</w:t><w:br/><w:t>5. When a user finishes a trick, Gizmo appears and says something.</w:t><w:br/><w:t>6. In Admin mode, Gizmo changes personality and reports FPS, audio status, errors.</w:t><w:br/><w:t>7. Gizmo should log each trick result into a file called admin.json</w:t></w:r></w:p><w:p><w:pPr><w:pStyle w:val="Heading1"/></w:pPr><w:r><w:t>🎩 Phase 4 – Trick Modules</w:t></w:r></w:p><w:p><w:r><w:t>Tricks are the heart of EchoMind. Each trick is a separate mini-app.</w:t><w:br/><w:br/><w:t>Example Trick: Think Again</w:t><w:br/><w:t>• Goal: The user thinks of a card and says it aloud.</w:t><w:br/><w:t>• Tech: The app uses Web Speech Recognition to listen for words like 'Queen of Hearts'.</w:t><w:br/><w:t>• Then it shows a glowing card back.</w:t><w:br/><w:t>• When the performer swipes the screen (bottom-left), the card flips to reveal the named card.</w:t><w:br/><w:t>• Use images for the card back and face.</w:t><w:br/><w:t>• Use CSS to make it flip with animation.</w:t><w:br/><w:t>• When it works, Gizmo says “Correct again.”</w:t></w:r></w:p><w:p><w:pPr><w:pStyle w:val="Heading1"/></w:pPr><w:r><w:t>🛠️ Phase 5 – Admin Panel &amp; Settings</w:t></w:r></w:p><w:p><w:r><w:t>The Admin Panel is like the magician's backstage control room. It lets you see everything going on and change how the app behaves without the audience knowing.</w:t><w:br/><w:br/><w:t>To build this:</w:t><w:br/><w:t>1. Create a file called /admin/console.html</w:t><w:br/><w:t>2. This page must only be visible when you:</w:t><w:br/><w:t xml:space="preserve">   - Swipe down during the intro screen within the first 10 seconds, or</w:t><w:br/><w:t xml:space="preserve">   - Press the F1 key on a keyboard (for desktop users)</w:t><w:br/><w:t xml:space="preserve">   - Enter a password (stored securely or encrypted locally)</w:t><w:br/><w:t>3. Inside the Admin Panel:</w:t><w:br/><w:t xml:space="preserve">   - Toggle each trick ON or OFF</w:t><w:br/><w:t xml:space="preserve">   - Enable/disable Gizmo’s voice hints</w:t><w:br/><w:t xml:space="preserve">   - See frame rate (FPS), microphone access status, and sound loading</w:t><w:br/><w:t xml:space="preserve">   - Run a 'Test All Systems' command to check animations, audio, mic, trick response</w:t><w:br/><w:t xml:space="preserve">   - Generate a backup ZIP file of the app's current state</w:t><w:br/><w:t xml:space="preserve">   - View logs of the last tricks performed</w:t><w:br/><w:t>4. Use localStorage or a JSON object (admin.json) to store the admin settings.</w:t></w:r></w:p><w:p><w:pPr><w:pStyle w:val="Heading1"/></w:pPr><w:r><w:t>💾 Phase 6 – Backup &amp; Analyze Commands</w:t></w:r></w:p><w:p><w:r><w:t>Magicians need a way to test everything before a show. EchoMind has two special commands that do that:</w:t><w:br/><w:br/><w:t>Command 1: 'backup'</w:t><w:br/><w:t>• Saves everything — which tricks are unlocked, what music is playing, admin settings, badges earned.</w:t><w:br/><w:t>• Outputs a file called backup.txt and saves a ZIP of all files.</w:t><w:br/><w:t>• Can be triggered by:</w:t><w:br/><w:t xml:space="preserve">  - Saying the word “backup”</w:t><w:br/><w:t xml:space="preserve">  - Typing it into the Admin Panel</w:t><w:br/><w:br/><w:t>Command 2: 'analyze everything'</w:t><w:br/><w:t>• This is a scan tool. It checks every link, every trick, every animation, and every file.</w:t><w:br/><w:t>• If a file is missing, or a route doesn’t work, it shows a red warning.</w:t><w:br/><w:t>• Runs a checklist for:</w:t><w:br/><w:t xml:space="preserve">  - Fractal background load success</w:t><w:br/><w:t xml:space="preserve">  - Soundscape load success</w:t><w:br/><w:t xml:space="preserve">  - Trick file existence</w:t><w:br/><w:t xml:space="preserve">  - Gizmo active state</w:t><w:br/><w:t xml:space="preserve">  - Admin gestures working</w:t><w:br/><w:t>• This makes sure the magician never starts a trick unless everything is ready.</w:t></w:r></w:p><w:p><w:pPr><w:pStyle w:val="Heading1"/></w:pPr><w:r><w:t>🧩 Phase 7 – Easter Eggs &amp; Echo Community</w:t></w:r></w:p><w:p><w:r><w:t>EchoMind hides secrets — little magical puzzles called Easter Eggs. Some can be solved by anyone. Others only appear in guest mode or after a codeword is typed.</w:t><w:br/><w:br/><w:t>Easter Egg System:</w:t><w:br/><w:t>1. Special orb: 'Don’t Click' orb reveals a hidden input bar</w:t><w:br/><w:t>2. If the user types a secret word or taps a hidden rhythm (like Morse code), it unlocks:</w:t><w:br/><w:t xml:space="preserve">   - New tricks</w:t><w:br/><w:t xml:space="preserve">   - Visuals or sound effects</w:t><w:br/><w:t xml:space="preserve">   - Special badge or quote from Gizmo</w:t><w:br/><w:t>3. Admins can create Easter Eggs inside admin.json:</w:t><w:br/><w:t xml:space="preserve">   - Set the trigger type: gesture, keyword, swipe pattern</w:t><w:br/><w:t xml:space="preserve">   - Set the reward or redirect: badge, new screen, secret animation</w:t><w:br/><w:t>4. Easter Eggs are tracked per device or user, linked to IP or account.</w:t><w:br/><w:br/><w:t>Echo Community:</w:t><w:br/><w:t>• Hidden forum area</w:t><w:br/><w:t>• Each user must solve a cipher to gain access (like a code-breaking game)</w:t><w:br/><w:t>• Once inside, they can:</w:t><w:br/><w:t xml:space="preserve">   - Share tricks</w:t><w:br/><w:t xml:space="preserve">   - Earn badges</w:t><w:br/><w:t xml:space="preserve">   - Post theories and routines</w:t></w:r></w:p><w:sectPr w:rsidR="00FC693F" w:rsidRPr="0006063C" w:rsidSect="00034616"><w:pgSz w:w="12240" w:h="15840"/><w:pgMar w:top="1440" w:right="1800" w:bottom="1440" w:left="1800" w:header="720" w:footer="720" w:gutter="0"/><w:cols w:space="720"/><w:docGrid w:linePitch="360"/></w:sectPr></w:body></w:document>
